{"mappings":"YAAA,IAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAEjCI,QAAQC,IAAIR,EAAKC,MACjBM,QAAQC,IAAIR,EAAKI,OACjBG,QAAQC,IAAIR,EAAKK,MACjBE,QAAQC,IAAIR,EAAKM,QAEjBN,EAAKC,KAAKQ,iBAAiB,UAO3B,SAAkBC,GAChBA,EAAIC,iBAEJ,IAAMC,EAAaC,aAAY,WAC7B,GAAIC,IAAoBC,OAAOC,EAASV,QAGtC,OAFAQ,GAAmB,EACnBG,GAAgBF,OAAOC,EAASX,OAiBfa,EAhBIJ,EAgBMV,EAhBWY,EAASZ,MAiB5C,IAAIe,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUd,UAEpBiB,EAAO,CAAEH,WAAUd,YAEpBA,OAxBEsB,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUd,EAAKuB,EAALvB,MACjBG,QAAQC,IAAI,uBAAwCoB,OAAfV,EAAS,QAAYU,OAANxB,EAAM,UAE3DyB,OAAM,SAAAF,G,IAAGT,EAAQS,EAART,SAAUd,EAAKuB,EAALvB,MAClBG,QAAQC,IAAI,sBAAqCoB,OAAfV,EAAS,QAAYU,OAANxB,EAAM,UAWjE,IAAuBc,EAAUd,EAR7B0B,cAAclB,KACbK,MAtBLjB,EAAKC,KAAKQ,iBAAiB,SAwB3B,SAAiBC,GACfM,EAASN,EAAIqB,OAAOC,MAAQtB,EAAIqB,OAAOE,MACvC1B,QAAQC,IAAIQ,MAxBd,IAAMA,EAAW,GACbF,EAAkB,EAClBG,EAAe,E","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\nconsole.log(refs.form);\nconsole.log(refs.delay);\nconsole.log(refs.step);\nconsole.log(refs.amount);\n\nrefs.form.addEventListener('submit', onSubmit);\nrefs.form.addEventListener('input', onInput);\n\nconst formData = {};\nlet counterPosition = 0;\nlet counterDelay = 0;\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  // counterDelay = Number(formData.step);\n  const intervalId = setInterval(() => {\n    if (counterPosition !== Number(formData.amount)) {\n      counterPosition += 1;\n      counterDelay += Number(formData.step);\n      return createPromise(counterPosition, formData.delay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n    clearInterval(intervalId);\n  }, counterDelay);\n}\nfunction onInput(evt) {\n  formData[evt.target.name] = evt.target.value;\n  console.log(formData);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","console","log","addEventListener","evt","preventDefault","intervalId","setInterval","$ce04d3a99e08e73b$var$counterPosition","Number","$ce04d3a99e08e73b$var$formData","$ce04d3a99e08e73b$var$counterDelay","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","concat","catch","clearInterval","target","name","value"],"version":3,"file":"03-promises.5afa810f.js.map"}